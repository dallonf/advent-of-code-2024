bst A
bxl 1
cdv B
bxl B
bxc
adv 3
out B
jnz 0

B = A % 8
B = B ^ 1
C = A / pow(2, B)
B = B ^ B
B = B ^ C
A = A / pow(2, 3)
out B
loop if A != 0

B = (A % 8) ^ 1
B = A / pow(2, B)
A = A / 8
out B % 8
loop if A != 0

XOR 1: if even, adds 1; if odd, subtracts 1
0 ^ 1 = 1
1 ^ 1 = 0
2 ^ 1 = 3
3 ^ 1 = 2
4 ^ 1 = 5
5 ^ 1 = 4
6 ^ 1 = 7
7 ^ 1 = 6
symmetrical: (x ^ 1) ^ 1 == x

sample run:
A == 2024
actual 0,6,3,7

B = (2024 % 8) ^ 1 = 0 ^ 1 = 1
B = 2024 / pow(2, 1) = 2024 / 2 = 1012
A = 2024 / 8 = 253
out 1012 % 8 = 4
...
ugh, that's not right, should be 0 to start with